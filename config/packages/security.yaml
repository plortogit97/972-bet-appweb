security:
    enable_authenticator_manager: true

    # Hashing passwords configuration
    password_hashers:
        # Configure your User entity password hasher
        App\Entity\User:
            algorithm: auto

    # User providers define how users are loaded
    providers:
        # Configure a provider that will load users from your User entity
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

        custom_user_provider:
            id: App\Security\CustomUserProvider

    # Firewalls define how users can authenticate
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: false
            provider: app_user_provider
            # Configure how the user should authenticate (e.g., login form, API tokens, etc.)
            form_login:
                login_path: login
                check_path: login
                enable_csrf: true

    # Access control rules define which roles have access to different parts of your site
    access_control:
        # Adjust these rules based on your needs
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # Password hashing settings for the test environment
            App\Entity\User:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
